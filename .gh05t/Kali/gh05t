#!/bin/env bash

tornotice() {
	echo -e "\033[1;37m +----------------------------------------------+"
	echo -e "\033[1;37m |              \033[0;31m       Tor                   \033[1;37m   |"
	echo -e "\033[1;37m |\033[0;32mIt is an acronym for Onion Router, a free and\033[1;37m |"
	echo -e "\033[1;37m |\033[0;32m open source software for enabling anonymous \033[1;37m |"
	echo -e "\033[1;37m | \033[0;32m communication. It drives worldwide internet\033[1;37m |"
	echo -e "\033[1;37m |       \033[0;32m         traffic for free,         \033[1;37m    |"
	echo -e "\033[1;37m |\033[0;31m   We use the Tor network to handle your IP  \033[1;37m |"
	echo -e "\033[1;37m |\033[0;31m   changes, so your password is likely to be \033[1;37m |"
	echo -e "\033[1;37m |\033[0;31m          repeated as your IP changes.       \033[1;37m |"
	echo -e "\033[1;37m +----------------------------------------------+"
	sleep 5
}
main_install() {
	if [[ $(command -v php) && $(command -v curl) && $(command -v python) && $(command -v python2) && $(command -v wget) && $(command -v tor) ]]; then
		echo -e ""
	else
		pkgs=(php curl python python2 wget tor)
		for pkg in "${pkgs[@]}"; do
		type -p "$pkg" &>/dev/null || {
		echo -e ""
			if [[ $(command -v pkg) ]]; then
				pkg install "$pkg" -y
			elif [[ $(command -v apt) ]]; then
				sudo apt install "$pkg" -y
			elif [[ $(command -v apt-get) ]]; then
				sudo apt-get install "$pkg" -y
			elif [[ $(command -v pacman) ]]; then
				sudo pacman -S "$pkg" --noconfirm
			elif [[ $(command -v dnf) ]]; then
				sudo dnf -y install "$pkg"
			elif [[ $(command -v yum) ]]; then
				sudo yum -y install "$pkg"
			else
				echo ""
			fi
			}
			done
	fi
}
main_install

install_tool() {
if [[ $(command -v instagram-py) ]]; then
	echo ""
else
	pip3 install requests --upgrade >/dev/null 2>&1
	pip3 install requests[socks] >/dev/null 2>&1
	pip3 install stem >/dev/null 2>&1
	pip3 install instagram-py >/dev/null 2>&1
	pip3 install instagram-py --upgrade
fi
}
install_tool

internet_connection() {
	ping -c 1 google.com >/dev/null 2>&1
	Return="$?"
	if [ "$Return" -eq "0" ]; then
		echo ""
		clear
	else
		clear
		echo ""
		printf "${red} Turn on the Internet or connect to the Internet"
		sleep 3
		clear
	fi
}

check_updates() {
	wget gh05t-hunter5.github.io/Basic-Installation-Linux/MyPass/gh05t-updates.sh
	bash gh05t-updates.sh
	if [ -f gh05t-updates.sh ]; then
		rm gh05t-updates.sh
	else
		echo ""
	fi
}

function auto_attack () {
#	tornotice
	banners
	echo -e " \033[1;37m | \033[1;37m[\033[0;31m××\033[1;37m]\033[0;32m Lines  Password type                  \033[1;37m  |"
	echo -e " \033[1;37m | \033[1;37m[\033[0;31m01\033[1;37m]\033[0;32m 1059   Passwords mixed                \033[1;37m  |"
	echo -e " \033[1;37m | \033[1;37m[\033[0;31m02\033[1;37m]\033[0;32m 65536  Passwords numbers              \033[1;37m  |"
	echo -e " \033[1;37m | \033[1;37m[\033[0;31m03\033[1;37m]\033[0;32m 65536  Passwords ABCD                 \033[1;37m  |"
	echo -e " \033[1;37m | \033[1;37m[\033[0;31m04\033[1;37m]\033[0;32m 65536  Passwords Number and ABCD      \033[1;37m  |"
	echo -e " \033[1;37m | \033[1;37m[\033[0;31m05\033[1;37m]\033[0;32m 65536  Passwords Numbers {extra}      \033[1;37m  |"
	echo -e " \033[1;37m | \033[1;37m[\033[0;31m06\033[1;37m]\033[0;32m 448    Passwords name and numbers     \033[1;37m  |"
	echo -e " \033[1;37m | \033[1;37m[\033[0;31m07\033[1;37m]\033[0;32m 1501   Passwords name and numbers     \033[1;37m  |"
	echo -e " \033[1;37m | \033[1;37m[\033[0;31m08\033[1;37m]\033[0;32m 100    Passwords mixed                \033[1;37m  |"
	echo -e " \033[1;37m | \033[1;37m[\033[0;31m09\033[1;37m]\033[0;32m 300    Passwords mixed                \033[1;37m  |"
	echo -e " \033[1;37m | \033[1;37m[\033[0;31m10\033[1;37m]\033[0;32m 2900   Passwords fpp names & numbers  \033[1;37m  |"
	echo -e " \033[1;37m | \033[1;37m[\033[0;31m11\033[1;37m]\033[0;32m 3000   Passwords regular pass         \033[1;37m  |"
	echo -e " \033[1;37m | \033[1;37m[\033[0;31m12\033[1;37m]\033[0;32m 800    Passwords simple  social       \033[1;37m  |"
	echo -e " \033[1;37m | \033[1;37m[\033[0;31m13\033[1;37m]\033[0;32m 1059   Passwords mixed                \033[1;37m  |"
	echo -e " \033[1;37m | \033[1;37m[\033[0;31m14\033[1;37m]\033[0;32m 1059   Passwords mixed                \033[1;37m  |"
	echo -e " \033[1;37m | \033[1;37m[\033[0;31m15\033[1;37m]\033[0;32m 1059   Passwords mixed                \033[1;37m  |"
	echo -e " \033[1;37m | \033[1;37m[\033[0;31m16\033[1;37m]\033[0;32m 3106   Passwords wal comm             \033[1;37m  |"
	echo -e " \033[1;37m | \033[1;37m[\033[0;31m17\033[1;37m]\033[0;32m 181    Passwords mix                  \033[1;37m  |"
	echo -e " \033[1;37m | \033[1;37m[\033[0;31m18\033[1;37m]\033[0;32m 306706 Passwords Big box fpp          \033[1;37m  |"
	echo -e " \033[1;37m | \033[1;37m[\033[0;31m19\033[1;37m]\033[0;32m 1000   Passwords English ls number    \033[1;37m  |"
	echo -e " \033[1;37m | \033[1;37m[\033[0;31m20\033[1;37m]\033[0;32m 20     Passwords My Password          \033[1;37m  |"
	echo -e " \033[1;37m +----------------------------------------------+"
	read -p $'  \e[1;92m[\e[0m\e[1;77m++\e[0m\e[1;92m] Enter Username : \e[0m' username
	read -p $'  \e[1;92m[\e[0m\e[1;77m++\e[0m\e[1;92m] Enter Pssword Type : \e[0m' passnum

}
function banners () {
	internet_connection
	clear
	echo -e " \033[1;37m +----------------------------------------------+"
	echo -e " \033[1;37m | \033[0;32m  ██████╗ ██╗  ██╗ ██████╗ ███████╗████████╗\033[1;37m |"
	echo -e " \033[1;37m |\033[0;32m  ██╔════╝ ██║  ██║██╔═████╗██╔════╝╚══██╔══╝\033[1;37m |"
	echo -e " \033[1;37m |\033[0;32m  ██║  ███╗███████║██║██╔██║███████╗   ██║ \033[1;37m   |"
	echo -e " \033[1;37m |\033[0;32m  ██║   ██║██╔══██║████╔╝██║╚════██║   ██║ \033[1;37m   |"
	echo -e " \033[1;37m |\033[0;32m  ╚██████╔╝██║  ██║╚██████╔╝███████║   ██║ \033[1;37m   |"
	echo -e " \033[1;37m | \033[0;32m  ╚═════╝ ╚═╝  ╚═╝ ╚═════╝ ╚══════╝   ╚═╝ \033[1;37m   |"
	echo -e " \033[1;37m +----------------------------------------------+"
	echo -e " \033[1;37m |  \033[0;32m   ██╗███╗   ██╗███████╗████████╗ █████╗  \033[1;37m  |"
	echo -e " \033[1;37m |  \033[0;32m   ██║████╗  ██║██╔════╝╚══██╔══╝██╔══██╗  \033[1;37m |"
	echo -e " \033[1;37m |  \033[0;32m   ██║██╔██╗ ██║███████╗   ██║   ███████║ \033[1;37m  |"
	echo -e " \033[1;37m |  \033[0;32m   ██║██║╚██╗██║╚════██║   ██║   ██╔══██║  \033[1;37m |"
	echo -e " \033[1;37m |  \033[0;32m   ██║██║ ╚████║███████║   ██║   ██║  ██║ \033[1;37m  |"
	echo -e " \033[1;37m |  \033[0;32m   ╚═╝╚═╝  ╚═══╝╚══════╝   ╚═╝   ╚═╝  ╚═╝ \033[1;37m  |"
	echo -e " \033[1;37m +----------------------------------------------+"
	echo -e " \033[1;37m |\033[0;31m Developer\033[1;37m :\033[0;34m GH05T HUNTER5   \033[0;31m  version\033[1;37m  :\033[0;34m 3.01\033[1;37m|"
	echo -e " \033[1;37m |\033[0;31m Instagram\033[1;37m :\033[0;34m GH05T_HUNTER5   \033[0;31m  FPP    \033[1;37m  :\033[0;34m 8.29\033[1;37m|"
	echo -e " \033[1;37m |\033[0;31m Powered  \033[1;37m :\033[0;34m Instagram-py    \033[0;31m  antony-jr\033[1;37m:\033[0;34m 2.07\033[1;37m|"
	echo -e " \033[1;37m +----------------------------------------------+"
	echo -e " \033[1;37m |\033[0;31m We strive to provide the best service for you\033[1;37m|"
	echo -e " \033[1;37m +----------------------------------------------+"
}


main_menu() {
	banners
	echo -e "  \033[1;37m[\033[0;31m01\033[1;37m]\033[0;32m Auto Attack"
	echo -e "  \033[1;37m[\033[0;31m02\033[1;37m]\033[0;32m Manual Attack"
	echo -e "  \033[1;37m[\033[0;31m03\033[1;37m]\033[0;32m Insta Report"
	echo -e "  \033[1;37m[\033[0;31m04\033[1;37m]\033[0;32m New Password"
	echo -e "  \033[1;37m[\033[0;31m05\033[1;37m]\033[0;32m History"
	echo -e "  \033[1;37m[\033[0;31m06\033[1;37m]\033[0;32m Re-Check"
	echo -e "  \033[1;37m[\033[0;31m07\033[1;37m]\033[0;32m Update"
	echo -e "  \033[1;37m[\033[0;31m08\033[1;37m]\033[0;32m Uninstall gh05t"
	echo -e "  \033[1;37m[\033[0;31m99\033[1;37m]\033[0;32m Help"
	echo -e "  \033[1;37m[\033[0;31m00\033[1;37m]\033[0;32m Exit"
	read -p $'  \e[1;92m[\e[0m\e[1;77m++\e[0m\e[1;92m] Choose an option : \e[0m' option
	if [ -z $option ]; then
		main_menu
	elif [ $option = "01" ] || [ $option = "1" ]; then

	elif [ $option = "02" ] || [ $option = "2" ]; then

	elif [ $option = "03" ] || [ $option = "3" ]; then

	elif [ $option = "04" ] || [ $option = "4" ]; then

	elif [ $option = "05" ] || [ $option = "5" ]; then

	elif [ $option = "06" ] || [ $option = "6" ]; then

	elif [ $option = "07" ] || [ $option = "7" ]; then
		check_updates
	elif [ $option = "08" ] || [ $option = "8" ]; then
	
		
}
